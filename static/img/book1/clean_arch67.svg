<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   version="1.1"
   id="svg2"
   width="816"
   height="1056"
   viewBox="0 0 816 1056"
   sodipodi:docname="clean_arch.pdf"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs6">
    <clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath18">
      <path
         d="m 1392,0 h 696 V 1056 H 1392 V 0"
         clip-rule="evenodd"
         id="path16" />
    </clipPath>
    <clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath28">
      <path
         d="m 1392,66 h 696 V 996 H 1392 V 66"
         clip-rule="evenodd"
         id="path26" />
    </clipPath>
  </defs>
  <sodipodi:namedview
     id="namedview4"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1" />
  <g
     id="g8"
     inkscape:groupmode="layer"
     inkscape:label="clean_arch"
     transform="translate(59.999999,2.64e-5)">
    <g
       id="g10" />
    <g
       id="g12"
       transform="translate(-1392)">
      <g
         id="g14"
         clip-path="url(#clipPath18)">
        <g
           id="g20" />
      </g>
    </g>
    <g
       id="g22"
       transform="translate(-1392)">
      <g
         id="g24"
         clip-path="url(#clipPath28)">
        <text
           xml:space="preserve"
           transform="translate(1392,82.51562)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text32"><tspan
             x="0 5 15 25 31 40 48 53 62 71 78 87"
             y="0"
             sodipodi:role="line"
             id="tspan30">topics here.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,126)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text36"><tspan
             x="0 6 15 23 28 37 46 56 61 66 80 89 94 103 113 122 128 133 142 151 158 167 172 178 186 191 196 206 211 221 231 237 246 251 256 266 275 280 285 293 303 317 326 331 340 346 355 364 369 379 388 395 404 409 419 426 435 449 458 463 469 478 483 492 502 512 521 526 531 536 545 554 559 569 575 581 587 596 603 612 621 630"
             y="0"
             sodipodi:role="line"
             id="tspan34">Instead, my goal here is to point out something very dramatic about the difference</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,149)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text40"><tspan
             x="0 10 19 24 39 48 57 66 71 76 85 94 99 112 118 128 134 143 150 159 164 173 182 192 197 205 214 224 233 238 248 255 265 274 281 290 304 312 317 322 334 343 352 357 365 374 384 393 398 408 415 425 434 441 450 464 469 478 486 495 503 508 517"
             y="0"
             sodipodi:role="line"
             id="tspan38">between the Clojure and Java programs. The Java program uses a </tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1914,149)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text44"><tspan
             x="0 14 23 28 37 47 53 62 67 77 86 93 99 108 118 124"
             y="0"
             sodipodi:role="line"
             id="tspan42">mutable variable</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(2047,149)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text48"><tspan
             x="0 20"
             y="0"
             sodipodi:role="line"
             id="tspan46">—a</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,172)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text52"><tspan
             x="0 10 19 26 32 41 51 57 66 71 76 85 94 99 104 113 122 131 140 149 158 166 171 179 184 193 198 207 212 222 231 238 244 253 262 267 272 281 290 295 304 313 322 331 340 345 351 361 370 375 385 391 396 401 410 419 424 434 441 451 460 467 476 490 495 500 512 521 530 535 540 550 559 566 572 581 591 597 606 611 617 625"
             y="0"
             sodipodi:role="line"
             id="tspan50">variable that changes state during the execution of the program. That variable is </tspan></text>
        <text
           xml:space="preserve"
           transform="translate(2022,172)"
           style="font-variant:normal;font-weight:normal;font-size:16px;font-family:'Courier New';-inkscape-font-specification:CourierNewPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text56"><tspan
             x="0"
             y="0"
             id="tspan54">i</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(2032,172)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text60"><tspan
             x="0 20 25 34"
             y="0"
             sodipodi:role="line"
             id="tspan58">—the</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,195)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text64"><tspan
             x="0 6 16 26 36 41 50 60 69 74 81 91 97 102 112 121 128 134 143 153 159 168 173 178 192 202 207 215 224 233 242 247 261 270 275 284 294 300 309 314 324 333 340 346 355 365 371 380 385 394 403 409 417 422 430 435 441 450 455 460 469 478 483 496 502 512 518 527 534 543 548 558 565 575 584 591 600 614 619 624 630 639 644 649 658"
             y="0"
             sodipodi:role="line"
             id="tspan62">loop control variable. No such mutable variable exists in the Clojure program. In the</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,218)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text68"><tspan
             x="0 13 19 29 35 44 51 60 65 75 82 92 101 108 117 131 136 141 151 160 167 173 182 192 198 207 215 220 226 232 241 250"
             y="0"
             sodipodi:role="line"
             id="tspan66">Clojure program, variables like </tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1647,218)"
           style="font-variant:normal;font-weight:normal;font-size:16px;font-family:'Courier New';-inkscape-font-specification:CourierNewPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text72"><tspan
             x="0"
             y="0"
             id="tspan70">x</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1662,218)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text76"><tspan
             x="0 9 16 25 30 36 45 51 56 62 71 77 83 91 100 110 115 120 130 139 144 149 154 163 172 181 186 195 202 211 216 225 234 244 253 260 265 279 289 299 305 311 317 326 336"
             y="0"
             sodipodi:role="line"
             id="tspan74">are initialized, but they are never modified.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,261)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text80"><tspan
             x="0 12 21 27 35 40 46 55 64 74 82 87 96 104 109 114 124 129 138 143 151 160 167 177 184 190 198 204 213 222 227 235 240 249 254 263 277 286 295 300 306 311 322 331 338 344 353 363 369 378 386 391 397 406 411 417 426 435 444 449 455 465 474 483 489 494 500 509 518 527 536 545 554 563 571"
             y="0"
             sodipodi:role="line"
             id="tspan78">This leads us to a surprising statement: Variables in functional languages </tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1968,261)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text84"><tspan
             x="0 10 20 25 34 44 49 54 64 73 80"
             y="0"
             sodipodi:role="line"
             id="tspan82">do not vary</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(2057,261)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text88"><tspan
             x="0"
             y="0"
             id="tspan86">.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,331)"
           style="font-variant:normal;font-weight:bold;font-size:33px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPS-BoldMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text92"><tspan
             x="0"
             y="0"
             id="tspan90">I</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1405,331)"
           style="font-variant:normal;font-weight:bold;font-size:33px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPS-BoldMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text96"><tspan
             x="0 32 64 88 107 130 152 165 187 200 222 245 253 276 300"
             y="0"
             sodipodi:role="line"
             id="tspan94">MMUTABILITY AND</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1737,331)"
           style="font-variant:normal;font-weight:bold;font-size:33px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPS-BoldMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text100"><tspan
             x="0"
             y="0"
             id="tspan98">A</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1760,331)"
           style="font-variant:normal;font-weight:bold;font-size:33px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPS-BoldMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text104"><tspan
             x="0 24 48 74 87 109 131 155 177 201 225"
             y="0"
             sodipodi:role="line"
             id="tspan102">RCHITECTURE</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,376)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text108"><tspan
             x="0 18 27 36 41 47 55 60 65 74 80 88 93 103 113 119 128 133 138 144 158 168 178 185 190 199 208 213 218 227 235 240 249 258 263 272 279 288 297 303 308 317 326 331 340 347 356 362 367 376 386 395 403 409 419 428 435 444 449 455 465 474 483 488 506 515 524 529 544 554 563 569 579 584 593 602 607 616 623 632 641 647 652 661 670"
             y="0"
             sodipodi:role="line"
             id="tspan106">Why is this point important as an architectural consideration? Why would an architect</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,399)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text112"><tspan
             x="0 10 19 24 33 43 52 61 70 77 86 95 105 110 125 131 136 145 150 155 164 173 178 192 201 206 215 225 231 237 243 248 257 262 272 278 283 293 302 309 315 324 334 340 349 357 366 371 383 392 401 406 415 424 432 447 456 463 468 474 482 487 496 506 514 523 530 540 546 555 560 568 574 588 598 604 613 619 624 638 644 650 655 662 671 680"
             y="0"
             sodipodi:role="line"
             id="tspan110">be concerned with the mutability of variables? The answer is absurdly simple: All race</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,422)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text116"><tspan
             x="0 9 19 28 38 44 49 55 65 74 82 87 92 102 111 120 130 136 146 155 164 169 178 188 197 207 213 218 224 234 243 251 256 261 270 279 289 294 303 313 322 331 340 347 354 363 372 377 382 391 401 411 420 425 434 439 449 456 466 476 482 491 505 513 518 527 534 543 548 558 567 576 581 586 596 601 615 624 629 638 648 654"
             y="0"
             sodipodi:role="line"
             id="tspan114">conditions, deadlock conditions, and concurrent update problems are due to mutable</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,445)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text120"><tspan
             x="0 10 19 26 32 41 51 57 66 74 79 84 96 106 115 120 129 138 147 156 166 171 176 185 194 204 213 218 227 232 239 248 257 266 271 280 290 299 309 315 320 326 336 345 350 360 367 372 381 386 395 405 414 423 432 439 446 455 464 469 474 483 493 503 512 517 526 531 541 548 558 568 574 583 597 602 608 614 619 628"
             y="0"
             sodipodi:role="line"
             id="tspan118">variables. You cannot have a race condition or a concurrent update problem if no</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,468)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text124"><tspan
             x="0 10 19 26 32 41 51 57 66 71 77 85 90 99 109 118 125 130 139 149 159 168 173 182 192 197 202 214 224 233 238 247 256 265 274 284 289 294 303 312 322 331 336 346 355 364 374 380 390 399 408 416 421 436 442 447 456 466 475 480 485 499 508 513 522 532 538 547 552 558 568 577 586 594"
             y="0"
             sodipodi:role="line"
             id="tspan122">variable is ever updated. You cannot have deadlocks without mutable locks.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,511)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text128"><tspan
             x="0 6 15 20 30 35 44 53 60 65 80 90 97 107 115 120 125 134 140 146 151 156 165 174 179 189 196 206 216 222 231 245 253 258 263 272 281 286 291 306 315 320 326 335 344 353 358 364 373 378 387 397 406 415 424 431 438 447 456 461 466 475 485 495 501 507 516 525 530 536 546 555 563 583 592 598 604 609 614 623"
             y="0"
             sodipodi:role="line"
             id="tspan126">In other words, all the problems that we face in concurrent applications—all the</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,534)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text132"><tspan
             x="0 10 17 27 37 43 52 66 74 79 94 103 108 114 123 132 141 146 152 161 166 175 185 195 201 207 216 225 230 236 246 255 263 268 273 282 291 296 301 308 317 327 336 342 349 358 363 377 386 392 397 403 413 419 428 433 438 447 454 463 472 482 490 495 500 509 518 528 533 547 556 562 567 573 583 589 598 603 613 620 630 639 648 656 664 674 681"
             y="0"
             sodipodi:role="line"
             id="tspan130">problems we face in applications that require multiple threads, and multiple processors</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,557)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text136"><tspan
             x="0 20 29 38 47 56 66 71 76 85 94 104 114 123 132 137 143 149 154 159 168 177 184 193 198 207 214 223 228 237 247 252 266 275 280 289 299 305 314 319 329 338 345 351 360 370 376 385 393"
             y="0"
             sodipodi:role="line"
             id="tspan134">—cannot happen if there are no mutable variables.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,600)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text140"><tspan
             x="0 14 22 27 36 45 50 59 66 75 84 90 95 104 113 118 123 128 137 147 156 161 169 178 188 197 203 213 218 228 237 242 252 261 268 277 282 288 297 302 311 318 327 335 340 349 359 364 370 379 384 390 398 406 415 424 432 437 447 453 458 467 477 486 495 504 511 518 527 536 545 553 558 563 575 585 594 599 614 623 632 637 642 647"
             y="0"
             sodipodi:role="line"
             id="tspan138">As an architect, you should be very interested in issues of concurrency. You want to</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,623)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text144"><tspan
             x="0 14 23 32 41 46 54 63 70 79 84 89 98 107 112 117 122 131 140 145 153 162 170 175 184 198 206 211 220 230 239 244 254 263 271 277 286 295 300 315 321 327 333 338 348 357 362 369 379 389 398 406 411 416 422 431 436 441 450 459 464 474 481 490 498 507 516 525 534 539 549 555 560 574 583 589 594 600 610 616 625 630 635 644 651 660 669 679"
             y="0"
             sodipodi:role="line"
             id="tspan142">make sure that the systems you design will be robust in the presence of multiple threads</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,646)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text148"><tspan
             x="0 9 18 28 33 43 50 60 69 78 86 94 104 111 119 124 129 141 150 159 164 174 183 192 200 205 211 221 230 235 244 254 263 268 282 291 299 304 309 319 328 333 342 350 359 365 374 383 388 397 407 416 423 431 440 446 452 457 462 467 476 485 494 499 504 510 518 523 538 547 556 561 570 579 586 591 597 611 625 634 639 648 658 664 670 676 681"
             y="0"
             sodipodi:role="line"
             id="tspan146">and processors. The question you must be asking yourself, then, is whether immutability</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,669)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text152"><tspan
             x="0 6 14 19 29 36 45 54 59 65 74 83 93 99 108"
             y="0"
             sodipodi:role="line"
             id="tspan150">is practicable.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,712)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text156"><tspan
             x="0 12 21 30 35 44 53 61 76 85 92 97 102 112 117 122 131 140 145 150 160 169 178 186 191 197 207 216 221 227 235 240 249 255 261 267 274 288 297 302 308 318 327 332 337 343 349 354 363 373 382 387 396 405 415 424 429 435 444 450 456 465 471 476 485 490 498 503 513 520 529 538 547 552 561 570 580 585 591 600 606 612 621 627 632"
             y="0"
             sodipodi:role="line"
             id="tspan154">The answer to that question is affirmative, if you have infinite storage and infinite</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,735)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text160"><tspan
             x="0 10 17 27 36 45 53 61 71 78 83 91 101 110 119 129 134 139 150 159 168 177 183 192 201 206 211 220 230 238 247 252 258 267 273 279 288 294 299 308 313 320 329 337 347 356 363 372 381 389 394 399 404 413 422 427 436 445 453 468 477 484 489 495 503 508 517 522 532 538 543 548 562 572 579 588 593 602 611 620 629 638 647 657"
             y="0"
             sodipodi:role="line"
             id="tspan158">processor speed. Lacking those infinite resources, the answer is a bit more nuanced.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,758)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text164"><tspan
             x="0 12 21 29 34 39 45 59 73 82 87 96 106 112 118 124 129 138 143 152 161 170 175 185 194 199 209 216 225 234 239 245 254 263 273 279 288 293 298 304 310 315 324 333 340 345 354 360 369 374 383 393 407 417 424 434 448 454 462 471 479 484 493 500 509 514 528 537 547 556"
             y="0"
             sodipodi:role="line"
             id="tspan162">Yes, immutability can be practicable, if certain compromises are made.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,801)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text168"><tspan
             x="0 11 20 25 31 39 44 50 60 70 79 84 93 98 103 111 121 135 144 149 159 165 170 175 184 194 202 211 216 225 235 249 259 266 276 290 296 304 313 321"
             y="0"
             sodipodi:role="line"
             id="tspan166">Let’s look at some of those compromises.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,872)"
           style="font-variant:normal;font-weight:bold;font-size:33px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPS-BoldMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text172"><tspan
             x="0"
             y="0"
             id="tspan170">S</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1410,872)"
           style="font-variant:normal;font-weight:bold;font-size:33px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPS-BoldMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text176"><tspan
             x="0 22 47 71 93 118 138 160 173 199 223 231 257"
             y="0"
             sodipodi:role="line"
             id="tspan174">EGREGATION OF</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1695,872)"
           style="font-variant:normal;font-weight:bold;font-size:33px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPS-BoldMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text180"><tspan
             x="0"
             y="0"
             id="tspan178">M</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1727,872)"
           style="font-variant:normal;font-weight:bold;font-size:33px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPS-BoldMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text184"><tspan
             x="0 24 43 66 88 101 123 136 158"
             y="0"
             sodipodi:role="line"
             id="tspan182">UTABILITY</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,917)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text188"><tspan
             x="0 14 23 32 37 47 53 58 63 72 81 86 100 110 118 123 128 137 147 161 175 185 194 199 208 218 232 242 249 259 273 279 287 296 304 309 315 324 329 336 345 354 363 370 380 385 390 400 405 411 425 439 448 453 462 472 478 484 490 495 504 509 515 523 528 533 543 548 556 565 574 581 590 599 608 613 622 627 632 641"
             y="0"
             sodipodi:role="line"
             id="tspan186">One of the most common compromises in regard to immutability is to segregate the</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,940)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text192"><tspan
             x="0 9 19 29 35 41 50 59 64 70 80 89 94 99 109 116 121 126 135 144 149 157 166 173 183 189 198 207 215 220 235 241 246 255 261 270 275 280 289 298 303 312 322 332 338 344 353 362 367 373 383 392 397 402 408 417 422 432 437 451 460 465 474 484 490 499 504 513 522 532 537 543 557 571 580 585 594 604 610"
             y="0"
             sodipodi:role="line"
             id="tspan190">application, or the services within the application, into mutable and immutable</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,963)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text196"><tspan
             x="0 9 19 33 43 53 62 71 80 85 93 98 103 115 124 133 138 144 158 172 181 186 195 205 211 220 225 234 244 258 268 278 287 296 305 310 318 323 333 342 349 355 365 372 386 391 396 405 414 420 427 432 437 446 454 463 471 476 482 491 496 505 510 520 529 536 545 551 560 565 571 580 589 598 603 609 619 628 637 643 648 663 672 680"
             y="0"
             sodipodi:role="line"
             id="tspan194">components. The immutable components perform their tasks in a purely functional way,</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(1392,986)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text200"><tspan
             x="0 15 21 26 35 45 54 59 64 73 81 87 96 105 110 119 128 137 142 156 165 170 179 189 195 204 209 219 228 235 241 250 260 266 275 283 288 293 305 314 323 328 334 348 362 371 376 385 395 401 410 415 424 434 448 458 468 477 486 495 500 508 513 522 532 546 560 569 578 584 593 602 607 616 621 636 642 647 656 661 671 680"
             y="0"
             sodipodi:role="line"
             id="tspan198">without using any mutable variables. The immutable components communicate with one</tspan></text>
      </g>
    </g>
  </g>
</svg>
