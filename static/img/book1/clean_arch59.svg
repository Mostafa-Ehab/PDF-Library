<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   version="1.1"
   id="svg2"
   width="816"
   height="1056"
   viewBox="0 0 816 1056"
   sodipodi:docname="clean_arch.pdf"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs6">
    <clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath18">
      <path
         d="m 4872,0 h 696 V 1056 H 4872 V 0"
         clip-rule="evenodd"
         id="path16" />
    </clipPath>
    <clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath28">
      <path
         d="m 4872,66 h 696 V 996 H 4872 V 66"
         clip-rule="evenodd"
         id="path26" />
    </clipPath>
  </defs>
  <sodipodi:namedview
     id="namedview4"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1" />
  <g
     id="g8"
     inkscape:groupmode="layer"
     inkscape:label="clean_arch"
     transform="translate(59.999999,2.64e-5)">
    <g
       id="g10" />
    <g
       id="g12"
       transform="translate(-4872)">
      <g
         id="g14"
         clip-path="url(#clipPath18)">
        <g
           id="g20" />
      </g>
    </g>
    <g
       id="g22"
       transform="translate(-4872)">
      <g
         id="g24"
         clip-path="url(#clipPath28)">
        <text
           xml:space="preserve"
           transform="translate(4873,79.5)"
           style="font-variant:normal;font-weight:normal;font-size:15px;font-family:'Courier New';-inkscape-font-specification:CourierNewPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text32"><tspan
             x="0"
             y="0"
             id="tspan30">}</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,128)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text36"><tspan
             x="0 6 15 20 30 35 44 53 60 65 80 90 97 107 115 120"
             y="0"
             sodipodi:role="line"
             id="tspan34">In other words, </tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4997,128)"
           style="font-variant:normal;font-weight:normal;font-size:16px;font-family:'Courier New';-inkscape-font-specification:CourierNewPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text40"><tspan
             x="0 10 20 30 40 50 60 70 80"
             y="0"
             sodipodi:role="line"
             id="tspan38">getchar()</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(5092,128)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text44"><tspan
             x="0 8 14 28 38 44 53 58 67 76 82 88 96 101 106 115 124 129 135 144 153 162 167 173 183 192 197 207 217 223 232 237 246 256 261 266 276 281 291 300 305 310 319 328"
             y="0"
             sodipodi:role="line"
             id="tspan42">simply calls the function pointed to by the </tspan></text>
        <text
           xml:space="preserve"
           transform="translate(5425,128)"
           style="font-variant:normal;font-weight:normal;font-size:16px;font-family:'Courier New';-inkscape-font-specification:CourierNewPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text48"><tspan
             x="0 10 20 30"
             y="0"
             sodipodi:role="line"
             id="tspan46">read</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(5470,128)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text52"><tspan
             x="0 10 20 26 35 40 49 56 61 71"
             y="0"
             sodipodi:role="line"
             id="tspan50">pointer of</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,151)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text56"><tspan
             x="0 5 14 23"
             y="0"
             sodipodi:role="line"
             id="tspan54">the </tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4900,151)"
           style="font-variant:normal;font-weight:normal;font-size:16px;font-family:'Courier New';-inkscape-font-specification:CourierNewPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text60"><tspan
             x="0 10 20 30"
             y="0"
             sodipodi:role="line"
             id="tspan58">FILE</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4945,151)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text64"><tspan
             x="0 10 19 24 33 38 46 51 58 67 76 81 90 97 106 111 121 131 137 146 151 160 170 175 180 190 195 205 214"
             y="0"
             sodipodi:role="line"
             id="tspan62">data structure pointed to by </tspan></text>
        <text
           xml:space="preserve"
           transform="translate(5164,151)"
           style="font-variant:normal;font-weight:normal;font-size:16px;font-family:'Courier New';-inkscape-font-specification:CourierNewPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text68"><tspan
             x="0 10 20 30 40"
             y="0"
             sodipodi:role="line"
             id="tspan66">STDIN</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(5214,151)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text72"><tspan
             x="0"
             y="0"
             id="tspan70">.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,194)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text76"><tspan
             x="0 12 21 27 35 40 48 54 68 78 84 93 98 103 110 116 125 134 139 145 153 158 163 172 181 186 196 205 213 219 227 232 238 248 255 260 269 275 281 286 296 306 312 321 335 345 352 362 371 377 385 399 404 410 419 424 438 452 457 462 468 477 482 495 506 517 522 527 533 543 550 555 564 573 582 596 606 612 621 626 631 640 650 659 666"
             y="0"
             sodipodi:role="line"
             id="tspan74">This simple trick is the basis for all polymorphism in OO. In C++, for example, every</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,217)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text80"><tspan
             x="0 10 16 23 28 37 46 52 57 63 72 81 90 95 101 111 120 125 140 146 151 160 166 175 180 189 194 203 209 218 226 234 239 248 257 265 270 279 284 294 304 310 319 324 333 340 345 351 360 365 374 379 384 393 403 409 418 423 432 441 447 453 462 472 477 486"
             y="0"
             sodipodi:role="line"
             id="tspan78">virtual function within a class has a pointer in a table called a </tspan></text>
        <text
           xml:space="preserve"
           transform="translate(5363,217)"
           style="font-variant:normal;font-weight:normal;font-size:16px;font-family:'Courier New';-inkscape-font-specification:CourierNewPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text84"><tspan
             x="0 10 20 30 40 50"
             y="0"
             sodipodi:role="line"
             id="tspan82">vtable</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(5423,217)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text88"><tspan
             x="0 5 10 19 28 38 43 52 58 64 69 78 87 93 99 107 112 117"
             y="0"
             sodipodi:role="line"
             id="tspan86">, and all calls to</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,240)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text92"><tspan
             x="0 10 16 23 28 37 46 52 57 63 72 81 90 95 101 111 120 128 133 142 152 157 162 171 178 188 197 206 215 220 225 234 243 248 253 258 267 277 283 292 297 302 315 325 334 342 347 354 363 372 377 387 394 402 407 417 423 428 438 447 454 460 470 479 484 490 500 509 517 522 530 536 550 560 566 575 580 586 596 605 615 620 625 634 643 649"
             y="0"
             sodipodi:role="line"
             id="tspan90">virtual functions go through that table. Constructors of derivatives simply load their</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,263)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text96"><tspan
             x="0 10 19 26 34 40 50 59 67 72 82 88 93 98 107 117 125 134 139 145 154 163 172 177 183 193 202 210 215 221 230 235 245 250 255 264 273"
             y="0"
             sodipodi:role="line"
             id="tspan94">versions of those functions into the </tspan></text>
        <text
           xml:space="preserve"
           transform="translate(5150,263)"
           style="font-variant:normal;font-weight:normal;font-size:16px;font-family:'Courier New';-inkscape-font-specification:CourierNewPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text100"><tspan
             x="0 10 20 30 40 50"
             y="0"
             sodipodi:role="line"
             id="tspan98">vtable</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(5215,263)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text104"><tspan
             x="0 10 16 21 26 35 44 49 59 69 75 84 93 98 103 113 122 128 137 146 151 160 167 176 185 190 199 209"
             y="0"
             sodipodi:role="line"
             id="tspan102">of the object being created.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,306)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text108"><tspan
             x="0 12 21 30 35 45 55 60 65 75 89 94 100 106 115 124 129 135 143 148 153 162 171 176 181 191 201 207 216 230 240 247 257 266 272 280 294 299 305 313 318 327 336 341 350 360 370 376 382 391 400 405 411 421 430 435 445 451 456 466 476 482 491 496 505 512 520 525 530 540 545 551 560 569 578 583 589 599 608 616"
             y="0"
             sodipodi:role="line"
             id="tspan106">The bottom line is that polymorphism is an application of pointers to functions.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,329)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text112"><tspan
             x="0 11 18 28 37 44 53 67 81 90 97 105 110 119 128 138 147 152 162 171 180 189 194 203 211 217 226 235 240 250 260 266 275 280 289 296 304 309 314 324 329 335 344 353 362 367 373 383 392 400 405 410 420 425 434 443 452 458 467 477 486 491 501 511 517 526 540 550 557 567 576 582 591 596 606 615 624 633 643 649 659"
             y="0"
             sodipodi:role="line"
             id="tspan110">Programmers have been using pointers to functions to achieve polymorphic behavior</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,352)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text116"><tspan
             x="0 8 14 23 32 41 46 56 66 75 80 94 103 112 126 135 144 153 158 167 174 183 192 198 203 212 221 226 235 242 251 259 264 279 288 295 304 309 315 321 328 336 341 346 352 366 376 382 391 405 414 423 428 437 447 452 458 467 472 477 486 495 500 506 515 520 529 534 544 554 564 574 582 587 592 598 607 612 622 627 636 645"
             y="0"
             sodipodi:role="line"
             id="tspan114">since Von Neumann architectures were first implemented in the late 1940s. In other</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,375)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text120"><tspan
             x="0 15 25 32 42 50 55 60 74 88 93 102 111 119 124 134 141 151 161 167 177 186 196 201 210 220 225 234 240 249 258 263 272 281 295"
             y="0"
             sodipodi:role="line"
             id="tspan118">words, OO has provided nothing new.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,418)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text124"><tspan
             x="0 14 23 28 33 43 52 57 62 67 76 85 90 96 104 109 118 128 133 138 148 157 163 168 177 182 191 201 208 215 224 233 238 243 248 262 276 281 287 296 305 314 323 332 341 350 358 363 377 386 395 400 409 419 424 429 438 447 457 466 471 480 486 496 505 514 519 528 536 541 551 561 567 576 590 600 607 617 626 632 640 654 659 664 674 683"
             y="0"
             sodipodi:role="line"
             id="tspan122">Ah, but that’s not quite correct. OO languages may not have given us polymorphism, but</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,441)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text128"><tspan
             x="0 5 14 23 32 37 46 55 65 74 79 93 102 112 121 126 132 137 142 156 165 174 183 188 196 205 211 220 227 232 241 250 260 265 279 288 297 306 311 325 335 342 351 356 365 375 384 394 403 412 418 427 436 441"
             y="0"
             sodipodi:role="line"
             id="tspan126">they have made it much safer and much more convenient.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,484)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text132"><tspan
             x="0 12 21 30 35 45 52 62 72 78 87 101 106 121 127 132 141 146 155 164 174 180 186 195 201 206 212 221 226 235 243 249 258 267 272 282 292 298 307 312 321 328 336 341 346 356 361 367 376 385 394 399 405 415 424 432 437 442 452 457 466 473 482 491 496 505 510 520 530 536 545 559 569 576 586 595 601 610 615 625 634 643 652 662 668 678"
             y="0"
             sodipodi:role="line"
             id="tspan130">The problem with explicitly using pointers to functions to create polymorphic behavior</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,507)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text136"><tspan
             x="0 6 14 19 24 33 42 47 52 62 72 78 87 92 101 108 116 121 126 136 141 147 156 165 174 179 185 195 204 212 217 226 233 242"
             y="0"
             sodipodi:role="line"
             id="tspan134">is that pointers to functions are </tspan></text>
        <text
           xml:space="preserve"
           transform="translate(5119,507)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text140"><tspan
             x="0 10 19 28 37 46 53 63 72"
             y="0"
             sodipodi:role="line"
             id="tspan138">dangerous</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(5199,507)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text144"><tspan
             x="0 5 10 21 30 39 48 53 62 70 79 84 90 98 103 113 120 126 136 145 154 159 169 178 183 192 197 205 214 219 224 234 240 245 259 268 277 286 295"
             y="0"
             sodipodi:role="line"
             id="tspan142">. Such use is driven by a set of manual</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,530)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text148"><tspan
             x="0 9 19 28 38 47 56 61 67 77 86 94 99 104 116 126 135 140 149 158 168 177 182 187 197 202 209 218 232 241 255 265 274 281 286 291 301 306 312 322 328 334 344 359 364 369 378 387 392 401 411 420 430 439 448 453 459 469 478 483 488 498 503 509 518 524 529 535 544 550 556 564 573 578 583 592 602 610 619 624 634 644 650 659 664 673 680 688"
             y="0"
             sodipodi:role="line"
             id="tspan146">conventions. You have to remember to follow the convention to initialize those pointers.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,553)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text152"><tspan
             x="0 12 22 31 36 45 54 64 73 78 83 93 98 105 114 128 137 151 161 170 177 182 187 197 202 208 218 224 230 240 255 260 265 274 283 288 297 307 316 326 335 344 349 355 365 374 379 384 394 399 408 417 423 429 434 443 449 455 460 469 479 488 495 500 506 515 524 533 538 544 554 563 571 576 581 590 597 607 616 625 634 639 644 653 663 671"
             y="0"
             sodipodi:role="line"
             id="tspan150">You have to remember to follow the convention to call all your functions through those</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,576)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text156"><tspan
             x="0 10 20 26 35 40 49 56 64 69 74 80 86 91 100 109 118 123 133 140 150 159 166 175 189 203 212 219 224 230 239 245 251 259 264 269 279 284 291 300 314 323 337 347 356 363 368 373 382 391 399 408 413 422 432 441 451 460 469 474 480 490 499 507 512 517 522 531 540 545 552 561 569 578 584 589 595 604 613 618 628 637 646 651 660 669"
             y="0"
             sodipodi:role="line"
             id="tspan154">pointers. If any programmer fails to remember these conventions, the resulting bug can</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,599)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text160"><tspan
             x="0 10 19 24 34 43 53 59 65 71 79 88 94 103 108 117 126 133 143 148 153 163 168 173 180 189 198 207 212 222 232 247 256 261 270 279 289 294 303 309 315 329 335 344 353 358 367"
             y="0"
             sodipodi:role="line"
             id="tspan158">be devilishly hard to track down and eliminate.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,642)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text164"><tspan
             x="0 14 28 33 39 48 57 66 75 84 93 102 110 115 124 130 136 150 156 165 174 179 188 193 198 207 216 224 233 238 247 257 266 276 285 294 299 305 315 324 332 337 346 355 365 370 375 380 389 398 405 414 420 430 437 446 451 456 461 470 479 487 496 501 511 520 529 538 547 554 562 567 572 585 593 599 608 617 622 631 640 645 659"
             y="0"
             sodipodi:role="line"
             id="tspan162">OO languages eliminate these conventions and, therefore, these dangers. Using an OO</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,665)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text168"><tspan
             x="0 6 15 24 33 42 51 60 69 74 88 97 106 115 123 128 138 148 154 163 177 187 194 204 213 219 227 241 246 251 258 264 274 280 289 295 300 305 317 326 335 340 345 351 360 369 374 379 389 396 406 416 422 432 441 449 454 463 472 477 486 495 505 512 526 536 545 553 558 568 578 593 602 609 614 619 628 637 642 647 657 663 673 678"
             y="0"
             sodipodi:role="line"
             id="tspan166">language makes polymorphism trivial. That fact provides an enormous power that old C</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,688)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text172"><tspan
             x="0 10 17 27 36 43 52 66 80 89 96 104 109 118 128 137 143 153 158 168 177 183 192 197 207 214 223 232 246 251 261 267 272 277 291 300 305 310 319 325 333"
             y="0"
             sodipodi:role="line"
             id="tspan170">programmers could only dream of. On this </tspan></text>
        <text
           xml:space="preserve"
           transform="translate(5210,688)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text176"><tspan
             x="0 10 19 27 33 41 46 51 66 75 80 89 98 107 112 121 131 140 149 155 164 174 183 188 193 202 211 216 221 235 249 254 260 274 284 294 302 311"
             y="0"
             sodipodi:role="line"
             id="tspan174">basis, we can conclude that OO imposes</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,711)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text180"><tspan
             x="0 10 16 24 33 39 49 55 61 70 79 84 94 103 108 114 123 133 139 146 155 164 169 174 179 186 195 204 212 218 227 234 239 249 255 260 269 279 288 293 300 310 316"
             y="0"
             sodipodi:role="line"
             id="tspan178">discipline on indirect transfer of control.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,760)"
           style="font-variant:normal;font-weight:bold;font-size:23px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPS-BoldMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text184"><tspan
             x="0"
             y="0"
             id="tspan182">T</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4887,760)"
           style="font-variant:normal;font-weight:bold;font-size:23px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPS-BoldMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text188"><tspan
             x="0 18"
             y="0"
             sodipodi:role="line"
             id="tspan186">HE</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4926,760)"
           style="font-variant:normal;font-weight:bold;font-size:23px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPS-BoldMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text192"><tspan
             x="0"
             y="0"
             id="tspan190">P</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4941,760)"
           style="font-variant:normal;font-weight:bold;font-size:23px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPS-BoldMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text196"><tspan
             x="0 18 40 55 72 78 96"
             y="0"
             sodipodi:role="line"
             id="tspan194">OWER OF</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(5058,760)"
           style="font-variant:normal;font-weight:bold;font-size:23px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPS-BoldMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text200"><tspan
             x="0"
             y="0"
             id="tspan198">P</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(5073,760)"
           style="font-variant:normal;font-weight:bold;font-size:23px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPS-BoldMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text204"><tspan
             x="0 18 31 46 69 87 104 119 137 146 159"
             y="0"
             sodipodi:role="line"
             id="tspan202">OLYMORPHISM</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,803)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text208"><tspan
             x="0 18 27 36 41 47 55 60 68 78 83 92 99 108 117 122 127 136 146 156 165 170 175 185 195 201 210 224 234 241 251 260 266 274 288 297 302 312 322 327 337 346 351 356 365 372 377 386 396 406 413 422 431 437 446 451 460 465 471 476 484 489 498 507 516 523 537 545 550 555 561 570 575 581 589 594 601 610 619 629 638 646 652 662 671"
             y="0"
             sodipodi:role="line"
             id="tspan206">What’s so great about polymorphism? To better appreciate its charms, let’s reconsider</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,826)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text212"><tspan
             x="0 5 14 23 28 37 46 55 69 79 85 94"
             y="0"
             sodipodi:role="line"
             id="tspan210">the example </tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4971,826)"
           style="font-variant:normal;font-weight:normal;font-size:16px;font-family:'Courier New';-inkscape-font-specification:CourierNewPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text216"><tspan
             x="0 10 20 30"
             y="0"
             sodipodi:role="line"
             id="tspan214">copy</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(5016,826)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text220"><tspan
             x="0 10 17 27 36 43 52 66 71 76 94 103 112 117 122 131 140 150 160 169 178 186 191 196 206 211 216 225 234 239 244 254 261 271 280 287 296 310 315 321 327 332 341 346 355 364 379 384 390 404 409 419 428 438 444 453 462 467 473"
             y="0"
             sodipodi:role="line"
             id="tspan218">program. What happens to that program if a new IO device is</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,849)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text224"><tspan
             x="0 9 16 25 34 39 48 58 67 72 83 92 102 112 122 130 139 144 159 168 173 188 197 206 211 216 221 231 236 245 253 262 267 272 281 290"
             y="0"
             sodipodi:role="line"
             id="tspan222">created? Suppose we want to use the </tspan></text>
        <text
           xml:space="preserve"
           transform="translate(5167,849)"
           style="font-variant:normal;font-weight:normal;font-size:16px;font-family:'Courier New';-inkscape-font-specification:CourierNewPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text228"><tspan
             x="0 10 20 30"
             y="0"
             sodipodi:role="line"
             id="tspan226">copy</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(5212,849)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text232"><tspan
             x="0 10 17 27 36 43 52 66 71 76 86 91 100 110 120 129 134 144 153 158 167 172 178 185 195 209 214 223 228 237 246 255 265 280 287 293 298 304 313"
             y="0"
             sodipodi:role="line"
             id="tspan230">program to copy data from a handwriting</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,872)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text236"><tspan
             x="0 7 16 25 35 44 53 59 64 70 80 89 94 104 113 123 129 138 147 152 157 167 172 181 186 194 204 213 222 231 240 245 253 262 271 276 285 294 302 308 316 325 332 337 347 356 366 372 381 390 396 401 415 425 440 445 455 465 470 485 494 499 508 517 526 536 541 546 556 561 570 579 588 597 606 615 620 625 634 643"
             y="0"
             sodipodi:role="line"
             id="tspan234">recognition device to a speech synthesizer device: How do we need to change the </tspan></text>
        <text
           xml:space="preserve"
           transform="translate(5520,872)"
           style="font-variant:normal;font-weight:normal;font-size:16px;font-family:'Courier New';-inkscape-font-specification:CourierNewPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text240"><tspan
             x="0 10 20 30"
             y="0"
             sodipodi:role="line"
             id="tspan238">copy</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,895)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text244"><tspan
             x="0 10 17 27 36 43 52 66 71 76 86 91 100 109 114 119 125 130 135 140 150 155 170 180 187 196 201 216 222 227 236 241 246 255 265 273 282 287 296 305 320 325 335 344 354 360 369 378 386"
             y="0"
             sodipodi:role="line"
             id="tspan242">program to get it to work with those new devices?</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,938)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text248"><tspan
             x="0 16 25 30 40 50 59 66 71 76 85 94 103 113 118 127 136 145 150 159 168 177 186 195 204 212 217 226 231 236 245 251 257 263 268 274 283 293 302 311 321 326 331 346 355 360 370 380 389 396 401 406 415 425 434 443 448 457 466 475 485 490 495 505 510 517 526 535 545 559 569 575 581 590 595 600 609 618"
             y="0"
             sodipodi:role="line"
             id="tspan246">We don’t need any changes at all! Indeed, we don’t even need to recompile the </tspan></text>
        <text
           xml:space="preserve"
           transform="translate(5495,938)"
           style="font-variant:normal;font-weight:normal;font-size:16px;font-family:'Courier New';-inkscape-font-specification:CourierNewPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text252"><tspan
             x="0 10 20 30"
             y="0"
             sodipodi:role="line"
             id="tspan250">copy</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,961)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text256"><tspan
             x="0 10 17 27 36 43 52 66 71 76 94 103 112 121 126 139 148 157 166 175 183 192 197 202 211 220 225 233 243 252 259 268 277 282 291 301 311 320 325 335 341 346 351 360 369"
             y="0"
             sodipodi:role="line"
             id="tspan254">program. Why? Because the source code of the </tspan></text>
        <text
           xml:space="preserve"
           transform="translate(5246,961)"
           style="font-variant:normal;font-weight:normal;font-size:16px;font-family:'Courier New';-inkscape-font-specification:CourierNewPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text260"><tspan
             x="0 10 20 30"
             y="0"
             sodipodi:role="line"
             id="tspan258">copy</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(5291,961)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text264"><tspan
             x="0 10 17 27 36 43 52 66 71 81 91 100 108 113 122 132 137 142 152 161 171 180 189 199 204 214 223 228 233 242"
             y="0"
             sodipodi:role="line"
             id="tspan262">program does not depend on the</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(4872,984)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text268"><tspan
             x="0 8 18 27 34 43 52 57 66 76 86 95 100 110 116 121 126 135 144 149 155 169 174 184 191 197 207 216 223 231 236 241 255 263 268 274 284 293 302 307 316 324 329 334 343 353 361 370 375 381 395 400 410 417 423 433 442 449 457 462 468 482 492 498 507 521 530 539 544 549 554 563 572 577 583 589 599 608 613 621 626 635 644 654 663 670"
             y="0"
             sodipodi:role="line"
             id="tspan266">source code of the IO drivers. As long as those IO drivers implement the five standard</tspan></text>
      </g>
    </g>
  </g>
</svg>
