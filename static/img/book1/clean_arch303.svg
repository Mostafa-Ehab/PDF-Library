<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   version="1.1"
   id="svg2"
   width="816"
   height="1056"
   viewBox="0 0 816 1056"
   sodipodi:docname="clean_arch.pdf"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs6">
    <clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath18">
      <path
         d="m 9744,0 h 696 V 1056 H 9744 V 0"
         clip-rule="evenodd"
         id="path16" />
    </clipPath>
    <clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath28">
      <path
         d="m 9744,66 h 696 V 996 H 9744 V 66"
         clip-rule="evenodd"
         id="path26" />
    </clipPath>
  </defs>
  <sodipodi:namedview
     id="namedview4"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1" />
  <g
     id="g8"
     inkscape:groupmode="layer"
     inkscape:label="clean_arch"
     transform="translate(59.999999,2.64e-5)">
    <g
       id="g10" />
    <g
       id="g12"
       transform="translate(-9744)">
      <g
         id="g14"
         clip-path="url(#clipPath18)">
        <g
           id="g20" />
      </g>
    </g>
    <g
       id="g22"
       transform="translate(-9744)">
      <g
         id="g24"
         clip-path="url(#clipPath28)">
        <text
           xml:space="preserve"
           transform="translate(9744,83)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text32"><tspan
             x="0 9 19 33 43 49 55 64 74 80 89 94 102 112 121 128 137 146 151 157 163 169 178 186 191 196 205 214 223 232 237 243 252 260 268 273 278 287 296 305 310 320 334 339 344 358 363 368 373 382 391 396 406 415 424 430 439 448 454 463 472 477 487 493 498 507 516 525 534 539 547 557 566 573 582 591 596 602 608 614 623 628 633 648 657 662 667 677 683"
             y="0"
             sodipodi:role="line"
             id="tspan30">compilable source files, each less than 1K. At the beginning of each source file, we told</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,106)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text36"><tspan
             x="0 5 14 23 28 37 47 61 71 77 83 92 99 104 110 119 124 139 148 154 163 172 177 186 196 206 213 222 230 238 243 248 258 263 269 279 288 298 303 308 317 326 331 338 347 355 364 370 375 381 390 399 404 414 421 431 440 447 456 470 475 482 491 496 505 510 515 520 534 547 561 566 579 589 599 609 614 620 630 637 642 647 656"
             y="0"
             sodipodi:role="line"
             id="tspan34">the compiler in which address to load the resulting program (e.g., ORG C400 for the</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,129)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text40"><tspan
             x="0 9 18 24 34 39 44 53 62 67 72 87 96 104 109 114 124 129 139 148 153 159 168 176 185 192 197 206 216 221 227 236 241 251 256 261 270 279 284 297 307 312 322 332 340 346 351 357 367 376 383"
             y="0"
             sodipodi:role="line"
             id="tspan38">chip that was to be inserted into the C4 position).</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,172)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text44"><tspan
             x="0 14 20 28 38 43 52 57 62 67 76 85 90 100 109 118 124 133 142 148 157 166 171 181 187 192 201 210 219 228 233 241 251 260 267 276 285 290 296 302 308 317 322 327 342 351 356 365 372 381 390 395 404 414 419 428 433 441 447 461 471 477 486 491 496 502 508 517 526 536 543 551 557 565 574 579 589 598 603 612 617 625 630 637 646 655 660 669 676"
             y="0"
             sodipodi:role="line"
             id="tspan42">Also at the beginning of each source file, we created a simple, fixed-size data structure</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,195)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text48"><tspan
             x="0 5 14 23 28 33 42 52 61 66 75 81 90 99 109 114 123 129 135 140 145 154 163 168 177 187 197 204 213 221 229 238 246 251 261 267 272 281 287 293 298 303 312 321 326 334 343 353 360 370 379 384 390 399 408 416 421 431 440 445 450 459 468 473 478 487 496 502 512 517 522 534 543 549 557 562 572 581 586 595 600 608 613 620 629 638 643 652 659"
             y="0"
             sodipodi:role="line"
             id="tspan46">that contained all the addresses of all the subroutines on that chip. This data structure</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,218)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text52"><tspan
             x="0 15 24 32 37 47 57 62 72 81 86 95 103 108 114 124 133 142 147 152 160 170 175 181 186 191 200 210 219 225 235 240 249 259 265 275 280 289 299 304 318 328 335 344 349 354 363 372 381 386 396 406 411 420 430 440 447 456 464 472 481 489 494 499 511 520 526 534 539 553 562 571 580 585 590 595 604 613 618 623 632 642 647 656 665 671"
             y="0"
             sodipodi:role="line"
             id="tspan50">was 40 bytes long, so it could hold no more than 20 addresses. This meant that no chip</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,241)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text56"><tspan
             x="0 9 19 28 34 44 49 58 67 77 86 91 105 115 122 131 136 141 150 159 168 173 183 193 198 206 215 225 232 242 251 256 262 271 280 288"
             y="0"
             sodipodi:role="line"
             id="tspan54">could have more than 20 subroutines.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,284)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text60"><tspan
             x="0 14 23 32 37 42 47 62 71 76 85 92 101 110 115 124 134 139 148 153 161 171 180 189 195 204 210 215 224 231 240 249 254 260 269 274 287 301 318 323 332 341 351 366 375 380 389 397 402 407 416 425 430 440 449 458 463 473 480 488 493 498 504 509 514 523 533 542 547 556 562 571 580 590 595 605 615 620 625 634 644 650 659 667 672 682"
             y="0"
             sodipodi:role="line"
             id="tspan58">Next, we created a special area in RAM known as the vectors. It contained 32 tables of</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,307)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text64"><tspan
             x="0 10 20 25 35 44 49 58 66 86 95 104 113 122 127 133 142 147 156 165 175 184 193 202 207 220 234 251 256 261 271 276 285 295 301 311 316 321 330 339 344 354 364 370 379 384 393 400 408 413 422 427 432 437 446 455 460 468 473 482 489 494 499 509 515 520 529 538 547 556 561 570 579 585 595"
             y="0"
             sodipodi:role="line"
             id="tspan62">40 bytesâ€”exactly enough RAM to hold the pointers at the start of each chip.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,350)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text68"><tspan
             x="0 11 17 26 35 41 47 55 60 65 80 89 94 103 112 121 130 139 148 158 163 172 182 191 198 207 212 221 230 236 242 247 252 262 267 276 286 295 302 311 316 324 333 343 350 360 369 374 380 389 398 403 413 422 427 436 446 455 462 471 476 485 494 500 510 515 521 530 535 545 550 559 568 573 579 588 598 604 611 620 629 634 639 648 657 663"
             y="0"
             sodipodi:role="line"
             id="tspan66">Finally, we changed every call to every subroutine on every chip into an indirect call</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,373)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text72"><tspan
             x="0 5 14 21 31 40 49 58 63 68 77 86 91 100 110 120 127 137 147 154 160 169 174 183 188 201 215 232 237 247 256 265 270 280 286"
             y="0"
             sodipodi:role="line"
             id="tspan70">through the appropriate RAM vector.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,416)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text76"><tspan
             x="0 18 27 36 45 50 60 69 76 81 91 98 108 117 126 134 142 152 159 164 174 184 194 199 208 218 223 228 234 239 244 259 269 278 284 294 299 307 316 325 334 339 348 357 366 375 380 389 398 404 414 419 428 437 447 452 458 468 477 487 492 497 506 515 520 530 539 548 553 563 570 575 580 589 599 605 614 619 628 633 638 643 652"
             y="0"
             sodipodi:role="line"
             id="tspan74">When our processor booted, it would scan each chip and load the vector table at the</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,439)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text80"><tspan
             x="0 8 13 22 29 34 39 49 55 60 69 78 87 96 101 110 119 125 135 140 146 155 160 170 175 180 189 198 203 216 230 247 252 262 271 280 285 295 302 310 315 320 332 341 350 359 364 370 375 380 395 405 414 420 430 435 441 450 464 474 479 485 494 499 509 514 519 528 537 542 556 565 571 580 585 595 602 612 621 628 637 651"
             y="0"
             sodipodi:role="line"
             id="tspan78">start of each chip into the RAM vectors. Then it would jump into the main program.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,482)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text84"><tspan
             x="0 12 21 27 35 40 55 65 72 81 90 100 105 115 124 131 140 145 160 169 175 181 186 191 205 215 229 234 239 254 263 272 281 286 301 310 315 321 327 336 345 355 360 369 374 384 393 402 407 412 422 429 434 443 453 463 472 482 487 496 501 507 516 525 530 539 546 555 560 565 580 589 594 603 613 622 628"
             y="0"
             sodipodi:role="line"
             id="tspan82">This worked very well. Now, when we fixed a bug, or added a feature, we could</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,505)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text88"><tspan
             x="0 8 14 28 38 44 53 58 65 74 83 93 107 117 123 129 138 143 153 162 171 176 186 193 198 203 218 228 233 242 251 257 267 275 280 285 294 303 313 318 326 335 344 354 359 365 374 382 387 392 397 406 416 424 433 438 447 456 462 472 480 485 490 500 505 510 519 528 533 539 545 554 560 570 575 583 592 599 609 615 624"
             y="0"
             sodipodi:role="line"
             id="tspan86">simply recompile one or two chips, and send just those chips to the field service</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,528)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text92"><tspan
             x="0 9 18 27 33 42 51 60 67 75"
             y="0"
             sodipodi:role="line"
             id="tspan90">engineers.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,571)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text96"><tspan
             x="0 16 25 30 39 48 58 63 77 86 96 105 110 115 124 133 138 147 156 162 172 180"
             y="0"
             sodipodi:role="line"
             id="tspan94">We had made the chips </tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9929,571)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text100"><tspan
             x="0 6 15 25 34 44 53 62 72 81 90 95 101 110 115 125 134 144 150 160 169 178 188 194"
             y="0"
             sodipodi:role="line"
             id="tspan98">independently deployable</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(10132,571)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text104"><tspan
             x="0 5 10 26 35 40 49 58 68 73 79 88 98 107 116 121 130 140 145 155 165 171 180 194 204 211 221 230 236"
             y="0"
             sodipodi:role="line"
             id="tspan102">. We had invented polymorphic</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,594)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text108"><tspan
             x="0 10 16 24 34 43 48 57 66 71 76 92 101 106 115 124 134 139 145 154 164 173 182 187 196 206 211 221 231 237 246 255 260 268"
             y="0"
             sodipodi:role="line"
             id="tspan106">dispatch. We had invented objects.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,637)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text112"><tspan
             x="0 12 21 27 35 40 55 64 72 77 86 91 101 107 116 125 131 140 145 154 161 170 179 185 190 199 208 213 222 229 238 243 248 258 267 273 278 287 292 298 304 309 318 325 334 340 346 354 359 364 380 389 394 404 410 419 428 437 446 456 461 466 475 485 493 502 507 516 525 531 541 549 554 560 569 574 579 595 604 609 618 628 637 646 651 660 669 675 681"
             y="0"
             sodipodi:role="line"
             id="tspan110">This was a plugin architecture, quite literally. We plugged those chips in. We eventually</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,660)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text116"><tspan
             x="0 9 18 27 33 42 51 60 67 76 86 91 97 102 107 115 125 130 135 144 153 158 163 172 177 183 192 201 206 215 222 231 236 245 255 264 270 280 285 295 304 309 315 324 332 337 346 352 358 367 377 382 388 397 402 412 417 427 436 443 448 458 465 475 485 494 503 508 516 521 531 540 545 555 561 570 579 588 594 603 612 617 622 631 640 645 654 663 669"
             y="0"
             sodipodi:role="line"
             id="tspan114">engineered it so that a feature could be installed into our products by plugging the chip</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,683)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text120"><tspan
             x="0 15 21 26 35 40 45 54 63 68 73 79 88 97 102 111 118 127 132 138 147 152 162 167 177 186 195 200 210 216 221 226 235 244 249 259 269 278 287 292 301 310 316 326 331 339 349 358 367 376 381 389 394 399 411 420 429 434 448 457 466 475 480 489 499 508 513 520 530 536 541 556 566 575 581"
             y="0"
             sodipodi:role="line"
             id="tspan118">with that feature into one of the open chip sockets. The menu control would</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,706)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text124"><tspan
             x="0 9 18 23 33 47 56 61 67 76 85 91 97 106 111 120 130 140 149 158 164 169 174 183 192 202 207 212 221 230 235 245 251 260 270 276 285 294 299 305 314 319 329 334 339 348 357 362 376 385 391 400 405 414 424 434 440 446 455 464 469 475 485 494 499 514 524 533 539 549 554 563 572 582 592 601"
             y="0"
             sodipodi:role="line"
             id="tspan122">automatically appear, and the binding into the main application would happen</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,729)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text128"><tspan
             x="0 9 18 23 33 47 56 61 67 76 85 91 97 105"
             y="0"
             sodipodi:role="line"
             id="tspan126">automatically.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,772)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text132"><tspan
             x="0 14 20 25 34 44 53 60 68 77 82 87 102 111 116 126 132 142 151 158 163 168 177 186 196 211 216 225 235 245 254 259 264 274 284 290 299 308 313 320 330 337 343 352 361 366 375 385 390 400 407 413 422 431 437 447 453 462 470 475 484 489 494 499 508 517 522 527 533 547 556 561 566 575 584 594 599 614 623 628 637 646 655"
             y="0"
             sodipodi:role="line"
             id="tspan130">Of course, we didnâ€™t know about object-oriented principles at the time, and we knew</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,795)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text136"><tspan
             x="0 9 19 24 33 39 48 57 62 71 81 91 100 105 110 118 127 137 146 153 162 167 173 182 191 196 205 213 222 229 234 240 249 254 263 270 276 285 294 303 308 314 321 331 345 350 360 369 377 383 392 401 409 417 422 429 438 444 453 461 466 471 484 493 498 503 508 517 526 531 538 547 557 563 577 586 595 600 608 613 628 637 644"
             y="0"
             sodipodi:role="line"
             id="tspan134">nothing about separating user interface from business rules. But the rudiments were</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,818)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text140"><tspan
             x="0 5 14 23 30 39 44 49 58 67 77 82 87 96 105 114 119 134 143 150 159 164 174 183 190 199 204 214 224 239 248 255 261 270 276"
             y="0"
             sodipodi:role="line"
             id="tspan138">there, and they were very powerful.</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,861)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text144"><tspan
             x="0 14 23 32 37 46 55 64 73 83 92 101 106 115 125 130 138 144 154 163 168 178 187 196 205 211 217 222 227 237 243 248 253 262 271 276 285 295 305 312 322 331 340 349 354 369 378 386 391 396 405 414 419 424 439 448 453 462 472 481 487 497 502 512 521 526 535 544 549 554 563 572 577 583 589 596 610 625 634 641 650 655 665 675 684"
             y="0"
             sodipodi:role="line"
             id="tspan142">One unexpected side benefit of the approach was that we could patch the firmware over</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,884)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text148"><tspan
             x="0 9 14 24 30 39 45 52 61 71 76 85 95 104 113 122 131 136 142 152 161 166 171 177 183 188 203 212 217 223 233 242 251 261 266 275 280 290 299 308 313 319 328 333 338 347 356 361 367 373 380 394 409 418 425 434 439 444 459 468 473 482 492 501 507 517 522 532 538 547 553 558 567 577 582 592 601 608 613 623 632 642 648 657 666"
             y="0"
             sodipodi:role="line"
             id="tspan146">a dial-up connection. If we found a bug in the firmware, we could dial up our devices</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,907)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text152"><tspan
             x="0 9 18 28 33 42 50 59 64 69 78 87 92 102 111 118 128 138 147 154 164 169 183 193 202 208 213 223 230 235 245 252 262 271 278 287 301 306 311 321 326 335 341 346 355 362 367 372 381 390 395 408 422 439 444 454 463 472 477 487 494 499 505 515 522 527 532 541 550 555 561 570 579 585 590 599 604 612 621 631 638 648 657 662 668 677"
             y="0"
             sodipodi:role="line"
             id="tspan150">and use the on-board monitor program to alter the RAM vector for the faulty subroutine</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,930)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text156"><tspan
             x="0 5 15 20 30 40 46 55 60 65 70 80 85 94 99 109 115 120 125 135 141 146 155 169 179 184 193 198 211 225 242 247 252 264 273 282 291 296 311 320 327 337 342 351 360 365 374 381 386 391 400 409 414 421 430 440 449 455 462 471 481 486 494 503 513 520 530 539 544 550 559 568 573 579 588 593 603 608 613 622 631 636 641 654 668"
             y="0"
             sodipodi:role="line"
             id="tspan154">to point to a bit of empty RAM. Then weâ€™d enter the repaired subroutine into that RAM</tspan></text>
        <text
           xml:space="preserve"
           transform="translate(9744,953)"
           style="font-variant:normal;font-weight:normal;font-size:20px;font-family:'Times New Roman';-inkscape-font-specification:TimesNewRomanPSMT;writing-mode:lr-tb;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
           id="text160"><tspan
             x="0 9 16 25 34 39 44 54 63 68 73 82 92 98 107 116 121 127 132 137 143 152 157 171 180 189 198 204 213 222 227 236 246 256 265 270 275 281 290 295 304 313 322 331 341 350 359 365 379 388 394"
             y="0"
             sodipodi:role="line"
             id="tspan158">area, by typing it in machine code, in hexadecimal.</tspan></text>
      </g>
    </g>
  </g>
</svg>
